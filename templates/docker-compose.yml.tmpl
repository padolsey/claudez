services:
  app:
    build:
      context: .
      args:
        NODE_VERSION: "${NODE_VERSION}"
    image: ${NAME}-app:latest
    container_name: ${NAME}-app
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ./workspace:/workspace:rw
      - /root/.ssh:/tmp/host-ssh:ro
    networks:
      - ${TRAEFIK_NETWORK}
    labels:
      - "traefik.enable=true"

      # PROD: <name>.${DOMAIN_BASE} -> :3000
      - "traefik.http.routers.${NAME}.rule=Host(`${NAME}.${DOMAIN_BASE}`)"
      - "traefik.http.routers.${NAME}.entrypoints=websecure"
      - "traefik.http.routers.${NAME}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${NAME}.service=${NAME}"
      - "traefik.http.services.${NAME}.loadbalancer.server.port=3000"

      # DEV: dev-<name>.${DOMAIN_BASE} -> :8000
      - "traefik.http.routers.dev-${NAME}.rule=Host(`dev-${NAME}.${DOMAIN_BASE}`)"
      - "traefik.http.routers.dev-${NAME}.entrypoints=websecure"
      - "traefik.http.routers.dev-${NAME}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dev-${NAME}.service=dev-${NAME}"
      - "traefik.http.services.dev-${NAME}.loadbalancer.server.port=8000"

      # VANILLA: vanilla-<name>.${DOMAIN_BASE} -> :9000
      - "traefik.http.routers.vanilla-${NAME}.rule=Host(`vanilla-${NAME}.${DOMAIN_BASE}`)"
      - "traefik.http.routers.vanilla-${NAME}.entrypoints=websecure"
      - "traefik.http.routers.vanilla-${NAME}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.vanilla-${NAME}.service=vanilla-${NAME}"
      - "traefik.http.services.vanilla-${NAME}.loadbalancer.server.port=9000"

    read_only: false
    cap_drop: [ "ALL" ]
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "FOWNER", "SETGID", "SETUID" ]
    security_opt: [ "no-new-privileges:true" ]
    mem_reservation: ${MEM_RESERVATION}
    mem_limit: ${MEM_LIMIT}
    cpus: "${CPU_LIMIT}"
    oom_score_adj: 500  # Make sandboxes preferred OOM kill targets (protects host services)
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:9000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ${TRAEFIK_NETWORK}:
    external: true
