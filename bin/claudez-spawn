#!/usr/bin/env bash
set -Eeuo pipefail
SELF_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "$SELF_DIR/.." && pwd)"
. "$ROOT_DIR/lib/common.sh"

VERIFY=0
NAME=""
CREATE_FLAGS=()

# Parse args
while [[ $# -gt 0 ]]; do
  case "$1" in
    --verify) VERIFY=1; CREATE_FLAGS+=("$1"); shift ;;
    -*) CREATE_FLAGS+=("$1"); shift ;;
    *) NAME="$1"; shift ;;
  esac
done

[ -z "$NAME" ] && die "Usage: claudez spawn <name> [options]
  Accepts all options from 'claudez create' (--oc, --oc-anthropic, --gemini, --codex, --blank, --large, --verify, etc.)"

load_env
need docker
CONTAINER_NAME="${NAME}-app"

# Check if container exists
if docker ps -a --format '{{.Names}}' | grep -qx "$CONTAINER_NAME"; then
  # Container exists - check if running
  if docker ps --format '{{.Names}}' | grep -qx "$CONTAINER_NAME"; then
    log "Zone '${NAME}' already exists and is running, entering..."
  else
    log "Zone '${NAME}' exists but is stopped, starting..."
    "$SELF_DIR/claudez-start" "$NAME"
  fi
else
  # Container doesn't exist - create it
  log "Zone '${NAME}' doesn't exist, creating..."
  "$SELF_DIR/claudez-create" "$NAME" "${CREATE_FLAGS[@]}" || die "Failed to create sandbox '${NAME}'"
fi

# Enter the zone
log "Entering zone '${NAME}'..."
exec "$SELF_DIR/claudez-enter" "$NAME"
