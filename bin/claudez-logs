#!/usr/bin/env bash
set -Eeuo pipefail
SELF_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "$SELF_DIR/.." && pwd)"
. "$ROOT_DIR/lib/common.sh"

NAME=""
DOCKER_ARGS=()

# Parse args - pass through docker logs flags
while [[ $# -gt 0 ]]; do
  case "$1" in
    -f|--follow) DOCKER_ARGS+=("$1"); shift ;;
    --tail) DOCKER_ARGS+=("$1" "$2"); shift 2 ;;
    --tail=*) DOCKER_ARGS+=("$1"); shift ;;
    -n) DOCKER_ARGS+=("--tail" "$2"); shift 2 ;;
    --since) DOCKER_ARGS+=("$1" "$2"); shift 2 ;;
    --since=*) DOCKER_ARGS+=("$1"); shift ;;
    -t|--timestamps) DOCKER_ARGS+=("$1"); shift ;;
    --help)
      cat <<'EOF'
Usage: claudez logs <name> [options]

Options:
  -f, --follow         Follow log output
  --tail N             Show last N lines (default: all)
  -n N                 Same as --tail N
  --since TIMESTAMP    Show logs since timestamp (e.g., 2024-01-01T00:00:00)
  -t, --timestamps     Show timestamps

Examples:
  provision logs myapp
  provision logs myapp -f
  provision logs myapp --tail 100
  provision logs myapp -f --tail 50
EOF
      exit 0
      ;;
    -*) die "Unknown flag: $1 (try --help)" ;;
    *) NAME="$1"; shift ;;
  esac
done

[ -z "$NAME" ] && die "Usage: claudez logs <name> [options]"

load_env
need docker

CONTAINER_NAME="${NAME}-app"

# Check if container exists
if ! docker ps -a --format '{{.Names}}' | grep -qx "$CONTAINER_NAME"; then
  die "Container '${CONTAINER_NAME}' not found."
fi

# Show logs
exec docker logs "${DOCKER_ARGS[@]}" "$CONTAINER_NAME"
