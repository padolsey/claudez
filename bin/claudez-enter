#!/usr/bin/env bash
set -Eeuo pipefail
SELF_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "$SELF_DIR/.." && pwd)"
. "$ROOT_DIR/lib/common.sh"

NAME="${1:-}"; [ -z "$NAME" ] && die "Usage: provision enter <name>"
CONTAINER_NAME="${NAME}-app"

need docker

# Check if container exists
if ! docker ps -a --format '{{.Names}}' | grep -qx "$CONTAINER_NAME"; then
  die "Container '${CONTAINER_NAME}' not found. Create it first with: provision create ${NAME}"
fi

# Check if container is running
if ! docker ps --format '{{.Names}}' | grep -qx "$CONTAINER_NAME"; then
  die "Container '${CONTAINER_NAME}' exists but is not running. Start it with: provision start ${NAME}"
fi

# Prefer launching/attaching Claude via the tmux-backed tclaude wrapper.
# IMPORTANT: Run as appuser so Claude finds /home/appuser/.claude.json
exec docker exec -it -u appuser "$CONTAINER_NAME" bash -lc 'command -v tclaude >/dev/null && tclaude || claude || bash'
